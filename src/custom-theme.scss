// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$primary-color: mat.m2-define-palette(mat.$blue-palette, 700);
$accent-color: mat.m2-define-palette(mat.$yellow-palette, 600);
$warn-color: mat.m2-define-palette(mat.$red-palette, 700);
$background-color: mat.m2-define-palette(mat.$grey-palette, 50);
$text-color: mat.m2-define-palette(mat.$grey-palette, 800);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$custom-theme: mat.m2-define-light-theme((
  color: (
    primary: $primary-color,
    accent: $accent-color,
    warn: $warn-color,
    background: $background-color,
    foreground: $text-color,
  ),
  typography: mat.define-typography-config()
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($custom-theme);
